name: "Sync & Build Design Tokens"

on:
  push:
    branches:
      - main
    paths:
      - "tokens/**"
      - "config.json"
      - "package.json"
      - ".github/workflows/sync-tokens.yml"
  workflow_dispatch:

jobs:
  sync-and-build-tokens:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # 1. Checkout repository
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup Node.js
      - name: "⚙️ Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      # 3. Install dependencies
      - name: "📦 Install dependencies"
        run: npm install

      # 4. Pull tokens from Tokens Studio
      - name: "🎨 Sync tokens from Tokens Studio"
        run: npx tokensstudio pull --host graphql.prod.tokens.studio
        env:
          TOKENS_STUDIO_API_KEY: ${{ secrets.TOKENS_STUDIO_API_KEY }}
        continue-on-error: true

      # 5. Validate token structure
      - name: "✅ Validate token structure"
        run: |
          echo "Validating token files..."

          # Check if token files exist
          if [ ! -f "tokens/modes/light.json" ]; then
            echo "❌ tokens/modes/light.json not found"
            exit 1
          fi

          if [ ! -f "tokens/modes/dark.json" ]; then
            echo "❌ tokens/modes/dark.json not found"
            exit 1
          fi

          if [ ! -f "tokens/typography.json" ]; then
            echo "❌ tokens/typography.json not found"
            exit 1
          fi

          # Validate JSON structure
          node -e "
            const fs = require('fs');
            const files = ['tokens/modes/light.json', 'tokens/modes/dark.json', 'tokens/typography.json'];
            files.forEach(file => {
              try {
                JSON.parse(fs.readFileSync(file, 'utf8'));
                console.log('✓ ' + file + ' is valid JSON');
              } catch (e) {
                console.error('✗ ' + file + ' has invalid JSON: ' + e.message);
                process.exit(1);
              }
            });
          "

          echo "✅ All token files are valid"

      # 6. Build tokens with Style Dictionary
      - name: "🔨 Build tokens for all platforms"
        run: npm run build
        env:
          NODE_ENV: production

      # 7. Check for changes
      - name: "🔍 Check for changes"
        id: verify-changed-files
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in tokens or build outputs"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Changes detected. Listing modified files:"
            git diff --name-only
          fi

      # 8. Configure Git
      - name: "🔧 Configure Git"
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # 9. Commit changes
      - name: "💾 Commit changes"
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git add .
          git commit -m "chore(tokens): Sync and build design tokens

          - Pull latest tokens from Tokens Studio
          - Build tokens for all platforms (CSS, SCSS, JS, TS, JSON, Flutter, Compose, Android, iOS)
          - Validate token structure

          Generated by GitHub Actions" || echo "No changes to commit"

      # 10. Push changes
      - name: "📤 Push changes to main"
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git push origin main

      # 11. Send Notification to n8n/WhatsApp
      - name: "📢 Send Build Notification"
        if: always()
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "workflow_run": {
                "conclusion": "${{ job.status }}",
                "name": "Sync & Build Design Tokens",
                "head_commit": {
                  "message": "Token sync and build complete"
                },
                "head_branch": "${{ github.ref_name }}",
                "html_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                "updated_at": "'$(date -u +'%Y-%m-%dT%H:%M:%SZ')'"
              },
              "repository": {
                "name": "${{ github.repository }}"
              },
              "sender": {
                "login": "${{ github.actor }}"
              }
            }' \
            ${{ secrets.N8N_WEBHOOK_URL }} || echo "n8n notification failed (non-blocking)"
        continue-on-error: true

      # 12. Summary
      - name: "📊 Workflow Summary"
        if: always()
        run: |
          echo "## 🎨 Token Sync & Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Step | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Checkout | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Setup Node.js | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Install Dependencies | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Sync from Tokens Studio | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Validate Tokens | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Tokens | ✅ |" >> $GITHUB_STEP_SUMMARY

          if [ "${{ steps.verify-changed-files.outputs.changed }}" == "true" ]; then
            echo "| Commit Changes | ✅ |" >> $GITHUB_STEP_SUMMARY
            echo "| Push to Main | ✅ |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| Commit Changes | ⏭️ No changes |" >> $GITHUB_STEP_SUMMARY
            echo "| Push to Main | ⏭️ No changes |" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Build Outputs" >> $GITHUB_STEP_SUMMARY
          echo "Tokens built for:" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 **Web**: CSS, SCSS, JavaScript (CommonJS & ESM), TypeScript, JSON" >> $GITHUB_STEP_SUMMARY
          echo "- 📱 **Mobile**: Flutter (Dart), Compose (Kotlin)" >> $GITHUB_STEP_SUMMARY
          echo "- 🤖 **Android**: Android XML" >> $GITHUB_STEP_SUMMARY
          echo "- 🍎 **iOS**: Swift" >> $GITHUB_STEP_SUMMARY
